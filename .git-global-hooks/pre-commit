#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset

CERR='\033[0;31m'
COK='\033[0;32m'
NC='\033[0m'

function fail {
    echo -e "\n\n${CERR}Sorry, but a pre-commit-hock has prevented this commit.${NC}"
    echo -e "You may ignore the hock via\n"
    echo -e "\t git commit -n \t\t"
    exit 1
}
trap fail ERR


function babellint {
    printf '%s' "Checking $1..."
    eval /usr/local/bin/docker run --rm --interactive -e "TERM=xterm-256color" -v "$(pwd)":"$(pwd)" -w "$(pwd)" heussd/babellint:latest '"$1"' || exit 1;

    printf "${COK}[OK]${NC}\n";
}
export -f babellint

function lintall {
    git ls-files --full-name "$1" | tr "\n" "\0" | xargs -I {} -0 bash -c "babellint \"{}\"" || fail
}

lintall "*.yml"
lintall "*.yaml"
lintall "*.json"


PYSPELLING_CONFIG=".pyspelling.yml"
if test -f "$PYSPELLING_CONFIG"; then
    pyspelling -c "$PYSPELLING_CONFIG"
fi

printf "${COK}[babellint] All lints passed${NC} üòç\n"
