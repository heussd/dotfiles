# vim:fileencoding=utf-8:ft=conf.tabsep
# https://sw.kovidgoyal.net/kitty/conf/

## General
#
# Font family. You can also specify different fonts for the
# bold/italic/bold-italic variants. By default they are derived automatically,
# by the OSes font system. Setting them manually is useful for font families
# that have many weight variants like Book, Medium, Thick, etc. For example:
# font_family Operator Mono Book
# bold_font Operator Mono Thick
# bold_italic_font Operator Mono Medium
# font_family      Input Mono
font_family        SauceCodePro Nerd Font

italic_font      auto
bold_font        auto
bold_italic_font auto

# Font size (in pts)
font_size        13.0

# The cursor shape can be one of (block, beam, underline)
cursor_shape     block

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking.
cursor_blink_interval     0.5

# Stop blinking cursor after the specified number of seconds of keyboard inactivity. Set to
# zero or a negative number to never stop blinking.
cursor_stop_blinking_after 15.0

# Number of lines of history to keep in memory for scrolling back
scrollback_lines 2000

# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
scrollback_pager less +G -R

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel)
wheel_scroll_multiplier 5.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

# Characters considered part of a word when double clicking. In addition to these characters
# any character that is marked as an alpha-numeric character in the unicode
# database will be matched.
select_by_word_characters :@-./_~?&=%+#

# Hide mouse cursor after the specified number of seconds of the mouse not being used. Set to
# zero or a negative number to disable mouse cursor hiding.
mouse_hide_wait 3.0

# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# For a list of available layouts, see the file layouts.py
enabled_layouts splits:split_axis=horizontal, splits:split_axis=vertical

# If enabled, the window size will be remembered so that new instances of kitty will have the same
# size as the previous instance. If disabled, the window will initially have size configured
# by initial_window_width/height, in pixels.
remember_window_size   yes
initial_window_width   1540
initial_window_height  800

# Delay (in milliseconds) between screen updates. Decreasing it, increases fps
# at the cost of more CPU usage. The default value yields ~100fps which is more
# that sufficient for most uses.
# repaint_delay    10
repaint_delay    10

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that
# redraw the entire screen on each loop, because kitty is so fast that partial
# screen updates will be drawn.
input_delay 3

# Visual bell duration. Flash the screen when a bell occurs for the specified number of
# seconds. Set to zero to disable.
visual_bell_duration 0.0

# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell yes

# The modifier keys to press when clicking with the mouse on URLs to open the URL
open_url_modifiers super

# The program with which to open URLs that are clicked on. The special value "default" means to
# use the operating system's default URL handler.
open_url_with default

# The value of the TERM environment variable to set
term xterm-kitty

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
window_border_width 0

window_margin_width 15

# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.

# Clipboard
map super+v             paste_from_clipboard
map ctrl+shift+s        paste_from_selection
map super+c             copy_to_clipboard
map shift+insert        paste_from_selection

# Scrolling
map ctrl+shift+up        scroll_line_up
map shift+up   	 scroll_line_up
map shift+down 	 scroll_line_down
map ctrl+shift+down      scroll_line_down
map ctrl+shift+k         scroll_line_up
map ctrl+shift+j         scroll_line_down
map ctrl+shift+page_up   scroll_page_up
map ctrl+shift+page_down scroll_page_down
map ctrl+shift+home      scroll_home
map ctrl+shift+end       scroll_end
map ctrl+shift+h         show_scrollback

# Window management
map super+n             new_os_window
map super+w             close_window
map ctrl+shift+enter    new_window_with_cwd
#map super+enter         new_window_with_cwd
#map ctrl+shift+]        next_window
map super+right 	 next_window
map super+down  	 next_window
#map ctrl+shift+[        previous_window
map super+left 	  	 previous_window
map super+up   	  	 previous_window
map ctrl+shift+f        move_window_forward
map ctrl+shift+b        move_window_backward
map ctrl+shift+`        move_window_to_top
map ctrl+shift+1        first_window
map ctrl+shift+2        second_window
map ctrl+shift+3        third_window
map ctrl+shift+4        fourth_window
map ctrl+shift+5        fifth_window
map ctrl+shift+6        sixth_window
map ctrl+shift+7        seventh_window
map ctrl+shift+8        eighth_window
map ctrl+shift+9        ninth_window
map ctrl+shift+0        tenth_window

# Tab management
map ctrl+shift+right    next_tab
map ctrl+shift+left     previous_tab
map ctrl+shift+t        new_tab
map ctrl+shift+q        close_tab
map ctrl+shift+l        next_layout
map ctrl+shift+.        move_tab_forward
map ctrl+shift+,        move_tab_backward

# Miscellaneous
map ctrl+shift+up      increase_font_size
map ctrl+shift+down    decrease_font_size
map ctrl+shift+backspace restore_font_size


## OS-specific Behaviour 

confirm_os_window_close 	 1
macos_hide_titlebar     	 no
macos_option_as_alt     	 no
macos_titlebar_color    	 background
allow_remote_control    	 yes


## Tabs

tab_title_template      	 {index} {title}
tab_bar_style           	 separator
tab_separator           	 "  "
tab_title_template      	 "  {index} {title}  "
active_tab_foreground   	 #000
active_tab_background   	 #808080
active_tab_font_style   	 normal
inactive_tab_foreground 	 #444
inactive_tab_background 	 #191919
inactive_tab_font_style 	 normal

map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9


## Hotkeys

map shift+super+up    	 move_window up
map shift+super+left  	 move_window left
map shift+super+right 	 move_window right
map shift+super+down  	 move_window down
map shift+ctrl+f      	 launch --type=overlay --stdin-source=@screen_scrollback /usr/local/bin/fzf --no-sort --no-mouse --exact -i


## Launch external apps
map f1            	 launch --type=tab --tab-title="op" bash -c op
map f2            	 launch --type=tab --tab-title="snippets" bash -c snippets-fzf
map shift+super+l 	 launch --type=overlay bash -c "keepasspw-fzf | pbcopy"
map shift+super+p 	 launch --type=overlay --cwd=current "$HOME/.scripts/git-pull-helper"
map shift+super+o 	 launch --type=overlay --cwd=current "$HOME/.scripts/git-push-helper"
map shift+super+d 	 launch --type=overlay --cwd=current "$HOME/.scripts/lazydocker-helper"
map shift+super+c 	 launch --type=overlay --cwd=current "$HOME/.scripts/lazygit-helper"
map shift+super+x 	 launch --type=tab --cwd=current bash -c "/usr/local/bin/vim ."
map shift+super+f        	 launch --type=tab --cwd=current bash -c 'fzf --preview "bat --style=numbers --color=always --line-range :500 {}" | xargs -o vim'
map shift+super+b 	 launch --type=overlay --cwd=current babellint-helper
map shift+super+e 	 launch --type=background --cwd=current open .
map shift+super+j 	 launch --cwd=current "$HOME/.scripts/open-with-auto"
map shift+super+k 	 launch --type=background --cwd=current code .
map shift+super+s 	 launch --type=background --cwd=current stree .
map shift+super+u 	 launch --type=background --cwd=current oop


## Window layout settings
window_border_width   	 1
window_margin_width   	 1
window_padding_width  	 20
active_border_color   	 #4D4D4D
inactive_border_color 	 #0F0F0F


## Text selection
selection_foreground white
selection_background #eb19f8


## Custom splits
map super+enter launch --cwd=current --location split


## Theme, lion

tab_bar_style              	 separator
tab_separator              	 "  "
tab_title_template         	 "  {index} {title}  "
active_tab_foreground      	 #000
active_tab_background      	 #808080
active_tab_font_style      	 normal
inactive_tab_foreground    	 #444
inactive_tab_background    	 #191919
inactive_tab_font_style    	 normal
window_logo_path           	 ~/.config/kitty/lion.png
window_logo_alpha          	 0.1

# BEGIN_KITTY_THEME
# Monokai Soda
include current-theme.conf
# END_KITTY_THEME


