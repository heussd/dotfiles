export SHORTHOSTNAME=`hostname | cut -d"." -f 1`
export OS=`uname -s | tr A-Z a-z`


function _hasFile() { if [ -e "$1" ]; then return 0; fi; return 1; }
function _hasNotFile() { if [ -e "$1" ]; then return 1; fi; return 0; }
function _hasFolder() { if [ -d "$1" ]; then return 0; fi; return 1; }
function _hasCmd() { which "$1" &>/dev/null; }
function _isMacOS() { uname -s | grep "Darwin" > /dev/null; }
function _isLinux() { uname -s | grep "Linux" > /dev/null; }

# Commonly used programs
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_CASK_OPTS="--no-quarantine"

export GEM_HOME=$HOME/.gem
export PATH=$GEM_HOME/bin:$PATH

export BROWSER="firefox"
export TERM=xterm-color
export EDITOR='vim'
export LC_ALL='en_US.UTF-8'

# Fine-tuning basic Unix commands
alias ...='cd ../..'
alias ..='cd ..'
alias KILL='sudo kill -9'
alias RM='rm -Rfv'
alias plz="sudo !!"
alias cp='cp -v'
alias df='df -h'
alias dud='du -h -d 1'
alias grep='grep --color'
alias halt='sudo halt'
alias l='ls -lh'
alias ll='l -ltr'
alias la='l -A'
alias ls='ls -G'
alias lsd='ls -l | egrep -e "^d"'
alias mv='mv -v'
alias reboot='sudo reboot'

git-cosh() { git commit $1 -m "$2"; git push; }
git-submodule-rm() { git submodule deinit -f "$1"; git rm -f "$1"; rm -rf .git/modules/$1; }
git-ROLLBACK() { git fetch origin; git reset --hard origin/master; git clean -fdx; }
git-head-stat() { pushd $1 > /dev/null ; git log --oneline | head -n 1; popd > /dev/null; }
git-stat-folder() { [ -d "$1" ] && printf " %-9s @ %s\n" "$1" "$(git-head-stat $1)"; }
alias gk='gitk --all'
alias gs='git status'
alias gca='git commit --ammend'
alias gb='git branch -v && git remote show origin'
alias gru='git remote update'
alias gp='git pull --rebase origin'

alias dotfiles='git --git-dir=$HOME/.dotfiles-bare-repo/ --work-tree=$HOME/'
alias dotfiels='dotfiles'
alias dotifles='dotfiles'
alias .f='dotfiles'

alias dotfiles-code='dotfiles ls-files | fzf | xargs code'

alias motd="source $HOME/.shell-motd"

# Tiny tools
alias rmEmtpyFolders='find . -type d -empty -exec rmdir "{}" \;'
alias rmdsstore="find . -name '*.DS_Store' -type f -delete"
alias rmsvn="find . -name '*.svn' -type f -delete"
alias noftchcks="du -akx | sort -nr | less"
alias mvn-upgrade='mvn versions:use-next-releases'
alias java-list-imports='find . -iname "*.java" | xargs cat | grep -e "^import" | sort -r | uniq'

# http://www.open-source-blog.de/2014/11/17/apple-spezifische-dateien-wie-appledouble-ds_store-etc-loeschen-mittels-find/
rm-macos-temp-files() { find \( -name ".AppleDouble" -or -name ".DS_Store" -or -name ".Trashes" -or -name "._*" -or -name ".TemporaryItems" \) -execdir rm -Rv {} \;; }


# Third party commands
_hasCmd rsync && alias gentlecp='rsync --update --progress --human-readable'
_hasCmd screen && alias screen="screen -t \""$SHORTHOSTNAME" - Escape key is CTRL+y - scroll via escape+ESC\""
_hasCmd thefuck && eval "$(thefuck --alias)"
_hasCmd newsboat && alias tv="newsboat --config-file=$HOME/.newsboat/config-tv --url-file=$HOME/.newsboat/urls-tv"


# https://bluz71.github.io/2018/11/26/fuzzy-finding-in-bash-with-fzf.html#find-file-and-edit
fzf_and_copy() {
    local file=$(
      fzf --query="$1" --no-multi --select-1 --exit-0 \
          --preview 'bat --color=always --line-range :500 {}'
      )
    if [[ -n $file ]]; then
        cat "$file" | pbcopy 
    fi
}
alias snippets='pushd ~/projects/snippets; fzf_and_copy; popd'


# Shortcuts
function take() { mkdir -p "$1" && cd "$1"; }
function t() { mkdir -p "$HOME/temp" && cd "$HOME/temp"; }
alias d="cd ~/Documents"
alias dl="cd ~/Downloads"
alias p="cd ~/projects"

alias vimwiki="vim -c VimwikiIndex"

function apple-app-id() { osascript -e 'id of app "'$1'"'; }


# Use BuildKit in Docker
alias docker-compose="COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose"
docker-logs() { docker ps | fzf | awk '{print $1}' | xargs docker logs -f; }


# Load OS specific bash settings
source-if-exist() { [[ -e $1 ]] && source "$1"; }

# Load Host specific bash settings
source-if-exist "${BASH_SOURCE[0]}.$SHORTHOSTNAME"

function inc-install() { 
  npx google-artifactregistry-auth ~/.npmrc
  npm install $@
}
function b64D() {
  echo $1 | base64 --decode
}


# Change directory to current Finder window
# https://stackoverflow.com/questions/420456/open-terminal-here-in-mac-os-finder#answer-7098442
cf() {
  cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')"
}
